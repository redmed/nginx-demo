
#user  nobody;
worker_processes  1;

error_log  /Users/redmed/Work/Develop/demos/nginx-demo/logs/error.log info;
pid        /Users/redmed/Work/Develop/demos/nginx-demo/logs/nginx.pid;

#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;



# Nginx 可以采用 epoll 机制,处理高并发连接的请求
events {
    #use epoll;
    worker_connections 1024;
}



http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /Users/redmed/Work/Develop/demos/nginx-demo/logs/access.log main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    gzip on;
    gzip_http_version 1.1;
    gzip_comp_level 2;
    gzip_types   text/plain text/css text/html
                application/x-javascript text/xml
                application/xml application/xml+rss
                text/javascript application/javascript;

    server {
        listen       8383;
        server_name  localhost;

        charset utf-8;
        # 不在错误页和响应包头部中显示 nginx 版本号
        server_tokens off;
        # 将 Web Server 类型置为其它 Web Server(如 Apache),以防止外部利用 nginx 可能 在漏洞进行攻击。在 server 段中配置:
        # more_set_headers 'Server: Apache';
        add_header Server "Apache";

        # void clickjacking
        add_header X-Frame-Options Baidu;

        # XSS filter
        add_header X-XSS-Protection "1; mode=block";

        access_log  /Users/redmed/Work/Develop/demos/nginx-demo/logs/host.access.log  main;

        root   /Users/redmed/Work/Develop/demos/nginx-demo;
        index  index.html index.htm index.php;

        location ~ /static/ {
            root /Users/redmed/Work/Develop/demos/nginx-demo/;
            expires 1d;
            gzip on;
        }

        # 防盗链
        location ~* \.(gif|jpg|swf|jpeg|png)$ {
            valid_referers none blocked localhost.me localhost;
            if ($invalid_referer) {
                return 503;
            }
        }


        # 只允许访问指定的扩展名
        location ~* \.(sql|bak|inc|old|log)$ {
            deny all;
        }

        # error_page  404  html/404.html;
        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /Users/redmed/Work/Develop/demos/nginx-demo/html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}
    #include servers/*;
}
